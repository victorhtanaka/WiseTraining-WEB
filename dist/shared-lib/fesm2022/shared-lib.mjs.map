{"version":3,"file":"shared-lib.mjs","sources":["../../../projects/shared-lib/src/environments/environment.ts","../../../projects/shared-lib/src/lib/services/base.service.ts","../../../projects/shared-lib/src/lib/services/answer.service.ts","../../../projects/shared-lib/src/lib/services/auth.service.ts","../../../projects/shared-lib/src/lib/services/category.service.ts","../../../projects/shared-lib/src/lib/services/company-management.service.ts","../../../projects/shared-lib/src/lib/services/company-subscription.service.ts","../../../projects/shared-lib/src/lib/services/company.service.ts","../../../projects/shared-lib/src/lib/services/course.service.ts","../../../projects/shared-lib/src/lib/services/course-content.service.ts","../../../projects/shared-lib/src/lib/services/exam.service.ts","../../../projects/shared-lib/src/lib/services/group.service.ts","../../../projects/shared-lib/src/lib/services/media.service.ts","../../../projects/shared-lib/src/lib/services/question.service.ts","../../../projects/shared-lib/src/lib/services/role.service.ts","../../../projects/shared-lib/src/lib/services/sidenav.service.ts","../../../projects/shared-lib/src/lib/services/spinner.service.ts","../../../projects/shared-lib/src/lib/services/subscription-plan.service.ts","../../../projects/shared-lib/src/lib/services/tag.service.ts","../../../projects/shared-lib/src/lib/services/user.service.ts","../../../projects/shared-lib/src/lib/models/jwt-user.model.ts","../../../projects/shared-lib/src/lib/models/pagination-params.model.ts","../../../projects/shared-lib/src/lib/guards/auth.guard.ts","../../../projects/shared-lib/src/lib/guards/role.guard.ts","../../../projects/shared-lib/src/lib/interceptors/spinner.interceptor.ts","../../../projects/shared-lib/src/lib/interceptors/snackbar.interceptor.ts","../../../projects/shared-lib/src/public-api.ts","../../../projects/shared-lib/src/shared-lib.ts"],"sourcesContent":["export const environment = {\r\n  production: false,\r\n  apiUri: 'https://localhost:7213/api',\r\n  redirectUrl: 'http://localhost:4200',\r\n  firebase: {\r\n    apiKey: \"AIzaSyDMjK-gQghxo1RMf6iFcc42nrktJdyUgZY\",\r\n    authDomain: \"famous-sandbox-398111.firebaseapp.com\",\r\n    projectId: \"famous-sandbox-398111\",\r\n    storageBucket: \"famous-sandbox-398111.firebasestorage.app\",\r\n    messagingSenderId: \"736847236700\",\r\n    appId: \"1:736847236700:web:a3287e0dfdcde28e0c6099\",\r\n    measurementId: \"G-Z65VKWN367\"\r\n  }\r\n};\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\n\r\nexport abstract class BaseService<T> {\r\n\r\n    protected httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*',\r\n        }),\r\n    };\r\n\r\n    constructor(protected http: HttpClient, @Inject(String) protected endpoint: string) { }\r\n\r\n    getAll(): Observable<T[]> {\r\n        this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n        return this.http.get<T[]>(`${environment.apiUri}/${this.endpoint}`, this.httpOptions);\r\n    }\r\n\r\n\r\n    getById(id: number): Observable<T> {\r\n        this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n        return this.http.get<T>(`${environment.apiUri}/${this.endpoint}/GetById/${id}`, this.httpOptions);\r\n    }\r\n\r\n    post(item: T): Observable<T> {\r\n        this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n        return this.http.post<T>(`${environment.apiUri}/${this.endpoint}`, item, this.httpOptions);\r\n    }\r\n\r\n    put(item: T): Observable<T> {\r\n        this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n        return this.http.put<T>(`${environment.apiUri}/${this.endpoint}`, item, this.httpOptions);\r\n    }\r\n\r\n    delete(id: number): Observable<T> {\r\n        this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n        return this.http.delete<T>(`${environment.apiUri}/${this.endpoint}/${id}`, this.httpOptions);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Answer } from '../models/answer.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnswerService extends BaseService<Answer> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Answer`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Auth, signInWithPopup, GoogleAuthProvider, getIdToken, signOut  } from '@angular/fire/auth';\r\nimport { Router } from '@angular/router';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { JwtUser } from '../models/jwt-user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private readonly tokenKey = 'token';\r\n  private currentUser: JwtUser | null = null;\r\n\r\n  constructor(private readonly router: Router, private readonly auth: Auth) {\r\n    const token = this.getToken();\r\n    if (token && this.isTokenValid(token)) {\r\n      this.setUserFromToken(token);\r\n    } else {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n  authenticate(token: string) {\r\n    localStorage.setItem(this.tokenKey, token);\r\n    this.setUserFromToken(token);\r\n  }\r\n  \r\n  private setUserFromToken(token: string) {\r\n    try {\r\n      this.currentUser = jwtDecode<JwtUser>(token);\r\n    } catch (error) {\r\n      console.error('Error decoding token:', error);\r\n      this.currentUser = null;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(this.tokenKey);\r\n    this.currentUser = null;\r\n    this.router.navigate(['/Unlogged']);\r\n  }\r\n\r\n  private isTokenValid(token: string): boolean {\r\n    try {\r\n      const decoded = jwtDecode<JwtUser>(token);\r\n      return decoded.exp * 1000 > Date.now();\r\n    } catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken(): string | null {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = this.getToken();\r\n    \r\n    return !!token && this.isTokenValid(token);\r\n  }\r\n\r\n  async getFirebaseToken(): Promise<string | null> {\r\n    const provider = new GoogleAuthProvider();\r\n    const result = await signInWithPopup(this.auth, provider);\r\n    const user = result.user;\r\n\r\n    return await getIdToken(user);\r\n  }\r\n\r\n  logoutGoogle() {\r\n    const auth = this.auth;\r\n    return signOut(auth);\r\n  }\r\n  \r\n  getCurrentUser(): JwtUser | null {\r\n    const token = this.getToken();\r\n    if (token && this.isTokenValid(token)) {\r\n      if (!this.currentUser) {\r\n        this.setUserFromToken(token);\r\n      }\r\n      return this.currentUser;\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Category } from '../models/category.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService extends BaseService<Category> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Category`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseService } from './base.service';\r\nimport { Company } from '../models/company.model';\r\nimport { User } from '../models/user.model';\r\nimport { Group } from '../models/group.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyManagementService extends BaseService<Company> {\r\n  \r\n  constructor(protected override http: HttpClient) {\r\n    super(http, 'Company');\r\n  }\r\n  \r\n  getMyCompany(): Observable<Company> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<Company>(`${environment.apiUri}/Company/GetMyCompany`, this.httpOptions);\r\n  }\r\n  \r\n  getCompanyUsers(companyId: number): Observable<User[]> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<User[]>(`${environment.apiUri}/Company/GetCompanyUsers/${companyId}`, this.httpOptions);\r\n  }\r\n  \r\n  addUserToGroup(userId: number, groupId: number): Observable<boolean> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.post<boolean>(`${environment.apiUri}/Company/AddUserToGroup`, { userId, groupId }, this.httpOptions);\r\n  }\r\n  \r\n  removeUserFromGroup(userId: number, groupId: number): Observable<boolean> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.delete<boolean>(`${environment.apiUri}/Company/RemoveUserFromGroup/${userId}/${groupId}`, this.httpOptions);\r\n  }\r\n  \r\n  update(company: Company): Observable<Company> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.put<Company>(`${environment.apiUri}/${this.endpoint}`, company, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { CompanySubscription } from '../models/company-subscription.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanySubscriptionService extends BaseService<CompanySubscription> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `CompanySubscription`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Company } from '../models/company.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyService extends BaseService<Company> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Company`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Course } from '../models/course.model';\r\nimport { CourseContent } from '../models/course-content.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { CourseComplete } from '../models/course-complete.model';\r\nimport { CourseSearchParams, CourseSearchResult } from '../models/course-search.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseService extends BaseService<Course> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Course`);\r\n  }\r\n\r\n  saveComplete(courseComplete: CourseComplete): Observable<Course> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.post<Course>(`${environment.apiUri}/${this.endpoint}/SaveComplete`, courseComplete, this.httpOptions);\r\n  }\r\n  \r\n  getContents(courseId: number): Observable<CourseContent[]> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<CourseContent[]>(`${environment.apiUri}/${this.endpoint}/GetContents/${courseId}`, this.httpOptions);\r\n  }\r\n\r\n  searchCourses(searchParams: CourseSearchParams): Observable<CourseSearchResult> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.post<CourseSearchResult>(`${environment.apiUri}/${this.endpoint}/Search`, searchParams, this.httpOptions);\r\n  }\r\n\r\n  purchaseCourse(courseId: number, companyId: number): Observable<boolean> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.post<boolean>(`${environment.apiUri}/${this.endpoint}/Purchase`, { CourseId: courseId, CompanyId: companyId }, this.httpOptions);\r\n  }\r\n\r\n  isCourseOwnedByCompany(courseId: number, companyId: number): Observable<boolean> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<boolean>(`${environment.apiUri}/${this.endpoint}/IsOwnedByCompany/${courseId}/${companyId}`, this.httpOptions);\r\n  }\r\n  \r\n  getCourse(courseId: string | number): Observable<Course> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<Course>(`${environment.apiUri}/${this.endpoint}/GetById/${courseId}`, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { CourseContent } from '../models/course-content.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseContentService extends BaseService<CourseContent> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `CourseContent`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Exam } from '../models/exam.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamService extends BaseService<Exam> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Exam`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseService } from './base.service';\r\nimport { Group } from '../models/group.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupService extends BaseService<Group> {\r\n\r\n  constructor(protected override http: HttpClient) {\r\n    super(http, `Group`);\r\n  }\r\n\r\n  getByCompanyId(companyId: number): Observable<Group[]> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<Group[]>(`${environment.apiUri}/Group/GetByCompanyId/${companyId}`, this.httpOptions);\r\n  }\r\n\r\n  create(group: Group): Observable<Group> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.post<Group>(`${environment.apiUri}/Group`, group, this.httpOptions);\r\n  }\r\n\r\n  update(group: Group): Observable<Group> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.put<Group>(`${environment.apiUri}/Group`, group, this.httpOptions);\r\n  }\r\n\r\n  deleteGroup(groupId: number): Observable<boolean> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.delete<boolean>(`${environment.apiUri}/Group/${groupId}`, this.httpOptions);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Media } from '../models/media.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaService extends BaseService<Media> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Media`);\r\n  }\r\n  \r\n  uploadFile(file: File): Observable<Media> {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    // Create a new headers object without Content-Type\r\n    const headers = new HttpHeaders({\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n    });\r\n    \r\n    // Use the new headers in the request\r\n    return this.http.post<Media>(\r\n      `${environment.apiUri}/${this.endpoint}/upload`, \r\n      formData, \r\n      { headers }\r\n    );\r\n  }\r\n  \r\n  getFullUrl(relativeUrl: string): string {\r\n    // Check if it's already a full URL\r\n    if (relativeUrl && (relativeUrl.startsWith('http://') || relativeUrl.startsWith('https://'))) {\r\n      return relativeUrl;\r\n    }\r\n    \r\n    // Check if it's a data URL\r\n    if (relativeUrl && relativeUrl.startsWith('data:')) {\r\n      return relativeUrl;\r\n    }\r\n    \r\n    // Otherwise, construct full URL\r\n    return relativeUrl ? `${environment.apiUri}${relativeUrl}` : '';\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Question } from '../models/question.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService extends BaseService<Question> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Question`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Role } from '../models/role.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService extends BaseService<Role> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Role`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidenavService {\r\n  private sidenav: MatSidenav;\r\n  private sidenavState = new BehaviorSubject<boolean>(false);\r\n  \r\n  public sidenavState$ = this.sidenavState.asObservable();\r\n\r\n  public setSidenav(sidenav: MatSidenav) {\r\n    this.sidenav = sidenav;\r\n  }\r\n\r\n  public open(): void {\r\n    if (this.sidenav) {\r\n      this.sidenav.open();\r\n      this.sidenavState.next(true);\r\n    }\r\n  }\r\n  \r\n  public close(): void {\r\n    if (this.sidenav) {\r\n      this.sidenav.close();\r\n      this.sidenavState.next(false);\r\n    }\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.sidenav) {\r\n      console.log('Toggling sidenav. Current state:', this.sidenav.opened);\r\n      this.sidenav.toggle();\r\n      console.log('New sidenav state:', this.sidenav.opened);\r\n      this.sidenavState.next(this.sidenav.opened);\r\n    } else {\r\n      console.error('Sidenav reference is not set in SidenavService');\r\n    }\r\n  }\r\n  \r\n  public isOpen(): boolean {\r\n    return this.sidenav && this.sidenav.opened;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpinnerService {\r\n\r\n  visibility: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.visibility = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n  show() {\r\n    this.visibility.next(true);\r\n  }\r\n\r\n  hide() {\r\n    this.visibility.next(false);\r\n  }\r\n\r\n  isVisible(){\r\n    return this.visibility.getValue();\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { SubscriptionPlan } from '../models/subscription-plan.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubscriptionPlanService extends BaseService<SubscriptionPlan> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `SubscriptionPlan`);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { Tag } from '../models/tag.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TagService extends BaseService<Tag> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `Tag`);\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { User } from '../models/user.model';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService extends BaseService<User> {\r\n\r\n  constructor(http: HttpClient) {\r\n    super(http, `User`);\r\n  }\r\n\r\n  register(user: User, isCompany: boolean): Observable<any> {\r\n    return this.http.post(`${environment.apiUri}/User/Register?isCompany=${isCompany}`, user, this.httpOptions);\r\n  }\r\n\r\n  login(credentials: User): Observable<any> {\r\n    return this.http.post(`${environment.apiUri}/User/Login`, credentials, this.httpOptions);\r\n  }\r\n\r\n  loginGoogle(token: string): Observable<any> {\r\n    const tokenRequest = { IdToken: token };\r\n    return this.http.post(`${environment.apiUri}/User/LoginWithGoogle`, tokenRequest, this.httpOptions);\r\n  }\r\n\r\n  getAuthenticatedUser(): Observable<User> {\r\n    this.httpOptions.headers = this.httpOptions.headers.set('Authorization', `Bearer ${localStorage.getItem('token')}`);\r\n    return this.http.get<User>(`${environment.apiUri}/User/GetAuthenticatedUser`, this.httpOptions);\r\n  }\r\n}\r\n","\r\n\r\nexport interface JwtUser {\r\n  sub: string;\r\n  role: string;\r\n  exp: number;\r\n  username: string;\r\n  companyId?: number;\r\n}\r\n\r\nexport class JwtUser implements JwtUser {\r\n  public constructor(init?: Partial<JwtUser>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { Base } from './base.model';\r\n\r\nexport interface PaginationParams {\r\n    page: number;\r\n    pageSize: number;\r\n    items: []\r\n}\r\n\r\nexport class PaginationParams implements PaginationParams {\r\n  public constructor(init?: Partial<PaginationParams>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard  {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/Unlogged']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { JwtUser } from '../models/jwt-user.model';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard {\r\n\r\n  constructor(\r\n    private authService: AuthService, \r\n    private router: Router,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    \r\n    if (!this.authService.isAuthenticated()) {\r\n      this.router.navigate(['/Login']);\r\n      return false;\r\n    }\r\n\r\n    const user: JwtUser | null = this.authService.getCurrentUser();\r\n    const requiredRole: string = route.data['role'] as string;\r\n\r\n    if (!user || !user.role || user.role !== requiredRole) {\r\n      this.snackBar.open('Você não tem permissão para acessar esta página.', 'Fechar', {\r\n        duration: 5000\r\n      });\r\n      this.router.navigate(['/Dashboard']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}","import { Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpResponse } from '@angular/common/http';\nimport { HttpRequest } from '@angular/common/http';\nimport { HttpHandler } from '@angular/common/http';\nimport { HttpEvent } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { SpinnerService } from '../services/spinner.service';\n\n@Injectable()\nexport class SpinnerInterceptor implements HttpInterceptor {\n\n  constructor(private spinnerService: SpinnerService) { }\n  private reqCount: number = 0;\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.reqCount++;\n    this.spinnerService.show();\n    return next\n      .handle(req)\n      .pipe(\n        tap((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            this.reqCount--;\n            if(this.reqCount<=0){\n              this.spinnerService.hide();\n              this.reqCount = 0;\n            }\n          }\n        },(error) => {\n            this.reqCount--;\n            if(this.reqCount<=0){\n              this.spinnerService.hide();\n              this.reqCount = 0;\n            }\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap, } from 'rxjs/operators';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable()\r\nexport class SnackbarInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      tap(e => {\r\n        if (request.method == \"POST\" || request.method == \"PUT\")\r\n          if (e instanceof HttpResponse && e.status == 200) {\r\n            this.snackBar.open('Saved successfully.', 'close', { duration: 2000, panelClass: 'successSnack' });\r\n          }\r\n      }),\r\n      catchError(error => {\r\n        this.snackBar.open('Error while saving.', 'close', { duration: 2000, panelClass: 'errorSnack' });\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of shared-lib\r\n */\r\n\r\n// Services\r\nexport * from './lib/services/answer.service';\r\nexport * from './lib/services/auth.service';\r\nexport * from './lib/services/base.service';\r\nexport * from './lib/services/category.service';\r\nexport * from './lib/services/company-management.service';\r\nexport * from './lib/services/company-subscription.service';\r\nexport * from './lib/services/company.service';\r\nexport * from './lib/services/course.service';\r\nexport * from './lib/services/course-content.service';\r\nexport * from './lib/services/exam.service';\r\nexport * from './lib/services/group.service';\r\nexport * from './lib/services/media.service';\r\nexport * from './lib/services/question.service';\r\nexport * from './lib/services/role.service';\r\nexport * from './lib/services/sidenav.service';\r\nexport * from './lib/services/spinner.service';\r\nexport * from './lib/services/subscription-plan.service';\r\nexport * from './lib/services/tag.service';\r\nexport * from './lib/services/user.service';\r\n\r\n// Models\r\nexport * from './lib/models/user.model';\r\nexport * from './lib/models/base.model';\r\nexport * from './lib/models/category.model';\r\nexport * from './lib/models/company.model';\r\nexport * from './lib/models/company-subscription.model';\r\nexport * from './lib/models/course.model';\r\nexport * from './lib/models/course-content.model';\r\nexport * from './lib/models/course-complete.model';\r\nexport * from './lib/models/course-search.model';\r\nexport * from './lib/models/exam.model';\r\nexport * from './lib/models/question.model';\r\nexport * from './lib/models/answer.model';\r\nexport * from './lib/models/group.model';\r\nexport * from './lib/models/jwt-user.model';\r\nexport * from './lib/models/media.model';\r\nexport * from './lib/models/pagination-params.model';\r\nexport * from './lib/models/role.model';\r\nexport * from './lib/models/subscription-plan.model';\r\nexport * from './lib/models/tag.model';\r\nexport * from './lib/models/token-request.model';\r\nexport * from './lib/models/user-course.model';\r\n\r\n// Guards\r\nexport * from './lib/guards/auth.guard';\r\nexport * from './lib/guards/role.guard';\r\n\r\n// Interceptors\r\nexport * from './lib/interceptors/spinner.interceptor';\r\nexport * from './lib/interceptors/snackbar.interceptor';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i1.AuthService","i1.SpinnerService"],"mappings":"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"}